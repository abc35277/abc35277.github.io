<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PostgreSQL的下载安装与一些常规配置</title>
    <url>/2024/07/14/PostgreSQL%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E4%B8%8E%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%84%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="PostgreSQL简介"><a href="#PostgreSQL简介" class="headerlink" title="PostgreSQL简介"></a>PostgreSQL简介</h1><h3 id="点击PostgreSQL官网的下载地址可以根据需要去选择下载自己想要的PostgreSQL版本。"><a href="#点击PostgreSQL官网的下载地址可以根据需要去选择下载自己想要的PostgreSQL版本。" class="headerlink" title="点击PostgreSQL官网的下载地址可以根据需要去选择下载自己想要的PostgreSQL版本。"></a>点击<a href="https://www.postgresql.org/">PostgreSQL官网</a>的<a href="https://www.postgresql.org/download/">下载地址</a>可以根据需要去选择下载自己想要的PostgreSQL版本。</h3><p>PostgreSQL下载完成后如果下载的是exe版本通常是不需要什么额外的操作的按导引页面安装即可完成部署。但是如果下载的zip版本就需要设置一下或者说需要设置一下以供后面使用方便。</p>
<h3 id="1-环境变量"><a href="#1-环境变量" class="headerlink" title="1. 环境变量"></a>1. 环境变量</h3><p>在使用PostgreSQL过程中我们大多会使用一些命令行工具，比如说pg_ctl.exe、pg_restore.exe、initdb.exe等，这些命令行工具都在\bin目录下，但是如我们没有设置环境变量我们就需要例如：<code>C:\pgsql\bin\pg_ctl.exe -D xxxx start</code>使用，命令显得非常长输入也麻烦，所以我们需要环境变量让我们免去输入<code>C:\pgsql\bin\</code>这个路径。到了这里可能有些同学就已经知道设置什么了，没错就是path环境变量。提到了path环境变量我就不的不提到java的环境变量设置其实就是这个道理。</p>
<p>windows下的环境变量分为两种，一种是系统环境变量（对所有用户生效）一种是用户环境变量只对某用户生效。这里我建议选择用户环境变量，如此不会破坏原有的系统环境即使全部删除了也无所谓。</p>
<p>下面是我的用户path环境变量：<br><code>F:\dev\env\Python3;F:\dev\env\Python3\Scripts;F:\dev\env\node;F:\dev\env\pgsql\bin;F:\dev\env\node\node_global;%CommandAppHome%;%windowskits%</code></p>
<p>其中<code>F:\dev\env\pgsql\bin</code>决定了我可以在任意地方启动命令行直接使用pg的bin目录下的一切软件。</p>
<h4 id="环境变量的一些知识"><a href="#环境变量的一些知识" class="headerlink" title="环境变量的一些知识"></a>环境变量的一些知识</h4><blockquote>
<p>环境变量其实是注册表里的一些特定信息，所以有些同学也可以使用注册表来修改。<br>windows在命令行窗口执行命令的时候会优先在当前目录下去查找是否有对应的软件，如果没有会去公共目录里去查找也就是说各个path。</p>
</blockquote>
<h3 id="2-PostgreSQL的一些基本命令"><a href="#2-PostgreSQL的一些基本命令" class="headerlink" title="2. PostgreSQL的一些基本命令"></a>2. PostgreSQL的一些基本命令</h3><ul>
<li>初始化数据库目录并初始化管理员账号<br><code>initdb -D xxx --no-locale -U postgres -W</code><br>这块之所以是<code>--no-locale</code>因为简体中文环境的问题在windows下有一些问题。</li>
<li>启动数据库<br><code>pg_ctl -D xxx start -p 65001</code></li>
<li>停止数据库<br><code>pg_ctl -D xxx stop -p 65001</code></li>
<li>使用postgres超级管理员账号登录<br><code>psql -U postgres -p 65001</code><br><strong>注意psql内置的查询工具（理论上讲pg部署的文件夹里都应该存在），使用psql必须在数据库启动时候执行。</strong></li>
</ul>
]]></content>
      <categories>
        <category>开发环境初始化</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>pg</tag>
        <tag>PostgreSQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下的Python的安装与配置</title>
    <url>/2024/07/14/Windows%E4%B8%8B%E7%9A%84Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><blockquote>
<p>Python由荷兰国家数学与计算机科学研究中心的吉多·范罗苏姆于1990年代初设计，作为一门叫做ABC语言的替代品。 Python提供了高效的高级数据结构，还能简单有效地面向对象编程。Python语法和动态类型，以及解释型语言的本质，使它成为多数平台上写脚本和快速开发应用的编程语言， 随着版本的不断更新和语言新功能的添加，逐渐被用于独立的、大型项目的开发。<br>Python在各个编程语言中比较适合新手学习，Python解释器易于扩展，可以使用C、C++或其他可以通过C调用的语言扩展新的功能和数据类型。Python也可用于可定制化软件中的扩展程序语言。Python丰富的标准库，提供了适用于各个主要系统平台的源码或机器码。文本引用自百度百科</p>
</blockquote>
<h2 id="Python下载"><a href="#Python下载" class="headerlink" title="Python下载"></a>Python下载</h2><ul>
<li><h3 id="点击Python官网访问python的官网"><a href="#点击Python官网访问python的官网" class="headerlink" title="点击Python官网访问python的官网"></a>点击<a href="https://www.python.org/">Python官网</a>访问python的官网</h3></li>
<li><h3 id="Python3-12-4下载页面"><a href="#Python3-12-4下载页面" class="headerlink" title="Python3.12.4下载页面"></a><a href="https://www.python.org/downloads/release/python-3124/">Python3.12.4下载页面</a></h3></li>
</ul>
<h4 id="使用pip安装库"><a href="#使用pip安装库" class="headerlink" title="使用pip安装库"></a>使用pip安装库</h4><blockquote>
<p><code>python install installer</code>  </p>
</blockquote>
<h4 id="使用命令强制更新python库已解决一些路径问题或者其他问题"><a href="#使用命令强制更新python库已解决一些路径问题或者其他问题" class="headerlink" title="使用命令强制更新python库已解决一些路径问题或者其他问题"></a>使用命令强制更新python库已解决一些路径问题或者其他问题</h4><blockquote>
<p><code>python -m pip install --upgrade --force-reinstall</code></p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
        <category>开发环境初始化</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World(原始保留)</title>
    <url>/2024/07/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>node.js的安装与使用</title>
    <url>/2024/07/14/node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Node-js的安装与配置"><a href="#Node-js的安装与配置" class="headerlink" title="Node.js的安装与配置"></a>Node.js的安装与配置</h1><p><a href="https://nodejs.org/zh-cn">[Node.js官网]</a></p>
<p><a href="https://nodejs.org/dist/v20.15.1/node-v20.15.1-x64.msi">20.15.1版本下载链接</a></p>
<p><a href="https://nodejs.org/zh-cn/download/prebuilt-binaries">zip包下载</a></p>
<p>设置全局安装文件夹</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;F:\dev\env\node\node_global&quot;</span><br></pre></td></tr></table></figure>

<p>设置全局缓存文件夹</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm config set cache &quot;F:\dev\env\node\node_cache&quot;</span><br></pre></td></tr></table></figure>
<p>安装cnpm到本地</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>增加node.js文件夹的路径到path环境变量</p>
<p>增加node.js文件夹下的node_global到path（这样就可以直接在命令行下访问比如说cnpm了）</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>开发环境初始化</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>给windows软件签名</title>
    <url>/2024/07/14/%E7%BB%99windows%E8%BD%AF%E4%BB%B6%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<ul>
<li><p>首先使用Makecert命令行工具生成pvk和cer文件如下命令</p>
<p> <code>Makecert -sv vscode_signature.pvk -r -n &quot;CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US&quot; vscode_signature.cer  </code></p>
<p>  请注意-n后面的双引号内的内容一定要和软件打包内的声明是已知的否则无法签名。</p>
</li>
</ul>
<ul>
<li><p>使用Cert2spc生成spc文件</p>
<p>  <code>Cert2spc vscode_signature.cer vscode_signature.spc</code></p>
</li>
<li><p>使用pvk2pfx将pvk和spc导出pfx</p>
<p>  <code>pvk2pfx -pvk vscode_signature.pvk -spc vscode_signature.spc -pfx vscode_signature.pfx -f</code></p>
</li>
<li><p>使用pfx文件给软件签名</p>
<p>  <code>SignTool sign /fd sha256 /a /f vscode_signature.pfx code_explorer_x64.appx</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>appx</tag>
        <tag>windows</tag>
      </tags>
  </entry>
</search>
