<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Windows下的Python的安装与配置</title>
    <url>/2024/07/14/Windows%E4%B8%8B%E7%9A%84Python%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><blockquote>
<p>Python由荷兰国家数学与计算机科学研究中心的吉多·范罗苏姆于1990年代初设计，作为一门叫做ABC语言的替代品。 Python提供了高效的高级数据结构，还能简单有效地面向对象编程。Python语法和动态类型，以及解释型语言的本质，使它成为多数平台上写脚本和快速开发应用的编程语言， 随着版本的不断更新和语言新功能的添加，逐渐被用于独立的、大型项目的开发。<br>Python在各个编程语言中比较适合新手学习，Python解释器易于扩展，可以使用C、C++或其他可以通过C调用的语言扩展新的功能和数据类型。Python也可用于可定制化软件中的扩展程序语言。Python丰富的标准库，提供了适用于各个主要系统平台的源码或机器码。文本引用自百度百科</p>
</blockquote>
<h2 id="python下载"><a href="#python下载" class="headerlink" title="python下载"></a>python下载</h2><ul>
<li><h3 id="点击Python官网访问python的官网"><a href="#点击Python官网访问python的官网" class="headerlink" title="点击Python官网访问python的官网"></a>点击<a href="https://www.python.org/">Python官网</a>访问python的官网</h3></li>
<li><h3 id="Python3-12-4下载页面"><a href="#Python3-12-4下载页面" class="headerlink" title="Python3.12.4下载页面"></a><a href="https://www.python.org/downloads/release/python-3124/">Python3.12.4下载页面</a></h3></li>
</ul>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World(原始保留)</title>
    <url>/2024/07/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>node.js的安装与使用</title>
    <url>/2024/07/14/node.js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Node-js的安装与配置"><a href="#Node-js的安装与配置" class="headerlink" title="Node.js的安装与配置"></a>Node.js的安装与配置</h1><p><a href="https://nodejs.org/zh-cn">[Node.js官网]</a></p>
<p><a href="https://nodejs.org/dist/v20.15.1/node-v20.15.1-x64.msi">20.15.1版本下载链接</a></p>
<p><a href="https://nodejs.org/zh-cn/download/prebuilt-binaries">zip包下载</a></p>
<p>设置全局安装文件夹</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm config set prefix &quot;F:\dev\env\node\node_global&quot;</span><br></pre></td></tr></table></figure>

<p>设置全局缓存文件夹</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm config set cache &quot;F:\dev\env\node\node_cache&quot;</span><br></pre></td></tr></table></figure>
<p>安装cnpm到本地</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>
<p>增加node.js文件夹的路径到path环境变量</p>
<p>增加node.js文件夹下的node_global到path（这样就可以直接在命令行下访问比如说cnpm了）</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>给windows软件签名</title>
    <url>/2024/07/14/%E7%BB%99windows%E8%BD%AF%E4%BB%B6%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<ul>
<li><p>首先使用Makecert命令行工具生成pvk和cer文件如下命令</p>
<p> <code>Makecert -sv vscode_signature.pvk -r -n &quot;CN=Microsoft Corporation, O=Microsoft Corporation, L=Redmond, S=Washington, C=US&quot; vscode_signature.cer  </code></p>
<p>  请注意-n后面的双引号内的内容一定要和软件打包内的声明是已知的否则无法签名。</p>
</li>
</ul>
<ul>
<li><p>使用Cert2spc生成spc文件</p>
<p>  <code>Cert2spc vscode_signature.cer vscode_signature.spc</code></p>
</li>
<li><p>使用pvk2pfx将pvk和spc导出pfx</p>
<p>  <code>pvk2pfx -pvk vscode_signature.pvk -spc vscode_signature.spc -pfx vscode_signature.pfx -f</code></p>
</li>
<li><p>使用pfx文件给软件签名</p>
<p>  <code>SignTool sign /fd sha256 /a /f vscode_signature.pfx code_explorer_x64.appx</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>appx</tag>
        <tag>windows</tag>
      </tags>
  </entry>
</search>
